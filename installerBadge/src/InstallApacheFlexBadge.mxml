<?xml version="1.0" encoding="utf-8"?>
<!--

Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

-->

<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx" 
			   xmlns:components="org.apache.flex.installApacheFlexBadge.components.*"
			   creationComplete="creationCompleteHandler(event)">
	
	<fx:Style source="/assets/styles/ApacheFlexToolsStyle.css" />
	
	<fx:Script><![CDATA[
		
		import mx.controls.Alert;
		import mx.core.FlexGlobals;
		import mx.events.FlexEvent;
		
		import org.apache.flex.installApacheFlexBadge.resources.EmbeddedMedia;
		import org.apache.flex.utilities.common.Constants;
		import org.apache.flex.utilities.common.InternetUtil;
		import org.apache.flex.utilities.common.MirrorURLUtil;
		import org.apache.flex.utilities.common.Tools;
		
		import spark.utils.TextFlowUtil;
		
		//----------------------------------------------------------------------
		//
		//    Constants
		//
		//----------------------------------------------------------------------
		
		private const DIMENSION_HEIGHT_REGULAR:int = 300;
		private const DIMENSION_HEIGHT_SMALL:int = 82;
		
		private const DIMENSION_WIDTH_REGULAR:int = 300;
		private const DIMENSION_WIDTH_SMALL:int = 400;
		
		private const INFO_DISCLAIMER_XML:XML = 
			<TextFlow xmlns="http://ns.adobe.com/textLayout/2008" fontFamily="openSansSemiBold">
				<p>
					Apache Flex is an effort undergoing incubation at The Apache Software Foundation (ASF), sponsored by the Apache Incubator.
				</p>
				<br />
				<p>
					Incubation is required of all newly accepted projects until a further review indicates that the infrastructure, communications, and decision making process have stabilized in a manner consistent with other successful ASF projects.
				</p>
				<br />
				<p>
					While incubation status is not necessarily a reflection of the completeness or stability of the code, it does indicate that the project has yet to be fully endorsed by the ASF.
				</p>
				<br />
				<p>
					Notice: Apache and Apache Flex are trademarks of The Apache Software Foundation. Other names may be trademarks of their respective owners.
				</p>
			</TextFlow>;
		private const INFO_ERROR_OPERATING_SYSTEM:String = "The Apache Flex SDK Installer application\nis not supported on your operating system.";
		private const INFO_ERROR_RETRIEVE_CONFIG:String = "The application was unable to retrieve\nthe configuration file.";
		private const INFO_FOR_IDE:String = "SDK Installation App";
		
		private const LABEL_BACK:String = "Close";
		private const LABEL_DISCLAIMER:String = "( disclaimer )";
		private const LABEL_DOWNLOAD:String = "DOWNLOAD";
		
		private const TITLE_ERROR_INTERNET:String = "Internet Error";
		private const TITLE_ERROR_PLATFORM:String = "Platform Error";
		
		//----------------------------------------------------------------------
		//
		//    Variables
		//
		//----------------------------------------------------------------------
		
		private var _applicationExtension:String;
		
		private var _sdkBinaryFileName:String;
		
		private var _installerDownloadPath:String;
		
		private var _installerFileName:String;
		
		private var _internetUtil:InternetUtil;
		
		private var _mirrorURLUtil:MirrorURLUtil = MirrorURLUtil.instance;

		[Bindable]
		private var _sdkVersionString:String = "";
		
		//----------------------------------------------------------------------
		//
		//    Methods
		//
		//----------------------------------------------------------------------
		
		//----------------------------------
		//    btnDownload_clickHandler
		//----------------------------------
		
		private function btnDownload_clickHandler(event:MouseEvent):void
		{
			try
			{
				_applicationExtension = Tools.getApplicationExtension();

				var request:URLRequest = new URLRequest(
					_installerDownloadPath + _installerFileName + _applicationExtension);
				
				navigateToURL(request, "_blank");
			}
			catch (error:Error)
			{
				Alert.show(INFO_ERROR_OPERATING_SYSTEM, TITLE_ERROR_PLATFORM);
			}
		}
		
		//----------------------------------
		//    creationCompleteHandler
		//----------------------------------
		
		private function creationCompleteHandler(event:FlexEvent):void
		{
			var displayType:String = ExternalInterface.call("displayType"); 
			
			var newStateName:String;
			switch (displayType)
			{
				case "afSDKInstallBadgeSmall" :
				{
					newStateName = "small";
					
					break;
				}
					
				case "afSDKInstallBadgeRegular" :
				default :
				{
					newStateName = "regular";
					
					break;
				}
			}
			currentState = newStateName;
			
			_internetUtil = InternetUtil.instance;
			
			var localDomain:String = InternetUtil.getTLDFromURL(
				ExternalInterface.call("function () { return window.location.hostname; }"));
			
			var remoteDomain:String = InternetUtil.getTLDFromURL(Constants.APACHE_FLEX_URL);

			var url:String = Constants.APACHE_FLEX_URL + Constants.CONFIG_XML_NAME;
			if (localDomain == remoteDomain)
			{
				_internetUtil.fetch(url, internetFetchResultHandler);
			}
			else
			{
				/*
					Using a simple webservice (PHP + cUrl) to bypass cross domain
					and security sandbox restrictions while developing.
				*/
				_internetUtil.fetch("badgeConfigService.php", internetFetchResultHandler, "url=" + escape(url));
			}
		}
		
		//----------------------------------
		//    getMirrorURLResultHandler
		//----------------------------------
		
		private function getMirrorURLResultHandler():void
		{
			_installerDownloadPath = _mirrorURLUtil.mirrorURL + _installerDownloadPath;
			
			parseSDKVersionNumber();
		}
		
		//----------------------------------
		//    internetFetchResultHandler
		//----------------------------------
		
		private function internetFetchResultHandler():void
		{
			if (!_internetUtil.errorOccurred)
			{
				var configXML:XML = XML(_internetUtil.result);
				var files:XMLList = configXML.files.file;
				
				_sdkBinaryFileName = files.(@name == "ApacheFlexSDK").@file.toString();
				
				_installerFileName = files.(@name == 'SDKInstallerApp').@file.toString();
				_installerDownloadPath = files.(@name == 'SDKInstallerApp').@path.toString();

				if (_installerDownloadPath.substr(0, Constants.URL_PREFIX.length) != Constants.URL_PREFIX)
				{
					var mirrorURLCGI:String = files.(@name == 'MirrorURLCGI').@file.toString();
					
					_mirrorURLUtil.getMirrorURL(
						Constants.APACHE_FLEX_URL + mirrorURLCGI,
						getMirrorURLResultHandler);
				}
				else
				{
					parseSDKVersionNumber();
				}
			}
			else
			{
				Alert.show(INFO_ERROR_RETRIEVE_CONFIG, TITLE_ERROR_INTERNET);
			}
		}
		
		//----------------------------------
		//    parseSDKVersionNumber
		//----------------------------------
		
		private function parseSDKVersionNumber():void
		{
			_sdkVersionString = _sdkBinaryFileName.substr(Constants.SDK_BINARY_FILE_NAME_PREFIX.length).split("-")[0];
			
			btnDownload.enabled = true;
		}
		
	]]></fx:Script>
	
	<fx:Declarations /> 
	
	<s:states>
		<s:State name="regular" />
		<s:State name="small" />
		<s:State name="disclaimerState" />
	</s:states>

	<s:Image id="imgBackground" source="{EmbeddedMedia.background}"
			 height="{DIMENSION_WIDTH_REGULAR + 10}" height.small="{DIMENSION_WIDTH_SMALL + 10}"
			 width="{DIMENSION_WIDTH_REGULAR + 10}" width.small="{DIMENSION_WIDTH_SMALL + 10}"
			 left="-5" top="-5"/>
	
	<s:Image id="imgLogo" source="{EmbeddedMedia.logo}"
			 height="165" width="164"
			 top="10"
			 horizontalCenter="0"
			 includeIn="regular" />
	
	<s:Image id="imgLogoSmall" source="{EmbeddedMedia.logoSmall}"
			 height="72" width="72"
			 left="5" top="5"
			 includeIn="small" />
	
	<s:Group height="37" width="250"
			 left="75" left.small="95"
			 top.regular="185" top.small="15">
		<s:Image id="imgHeader" source="{EmbeddedMedia.header}" />
		
		<s:Label text="{_sdkVersionString}"
				 fontFamily="openSansBold"
				 color="0x162545" fontSize="32"
				 trackingLeft="-1" trackingRight="-1"
				 left="87" top="9" />		
	</s:Group>
	
	<s:Label text="{INFO_FOR_IDE}"
			 width="190"
			 left="25" left.small="228"
			 top="235" top.small="17"
			 color="0x162545" 
			 fontFamily="openSansSemibold" fontSize="13"
			 textAlign="center" />
	
	<s:Label text="{LABEL_DISCLAIMER}"
			 width="60"
			 left="190" left.small="140"
			 top="236" top.small="60"
			 color="0x717C91"
			 fontFamily="openSansLightItalic" fontSize="11"
			 textAlign="center"
			 buttonMode="true"
			 click="{grpDisclaimer.visible = true;}" />
	
	<s:Button id="btnDownload" label="{LABEL_DOWNLOAD}"
			  height="30"
			  bottom="10" bottom.small="12"
			  right.small="27"
			  horizontalCenter.regular="0"
			  enabled="false"
			  buttonMode="true"
			  useHandCursor="true"
			  click="btnDownload_clickHandler(event)"
			  styleName="mainBtnStyle"/>

	<s:Group id="grpDisclaimer"
			 height="{DIMENSION_HEIGHT_REGULAR}" height.small="{DIMENSION_HEIGHT_SMALL}"
			 width="{DIMENSION_WIDTH_REGULAR}" width.small="{DIMENSION_WIDTH_SMALL}"
			 visible="false">
		<s:Graphic>    
			<s:Rect height="{DIMENSION_HEIGHT_REGULAR}"
					width="{DIMENSION_WIDTH_SMALL}">
				<s:fill>
					<s:SolidColor color="0x000000" alpha="0.5"/>
				</s:fill>
			</s:Rect>
		</s:Graphic>
		
		<s:Button id="btnBack" label="{LABEL_BACK}"
				  height="15"
				  right="15" top="10"
				  fontSize="10"
				  buttonMode="true"
				  click="{grpDisclaimer.visible = false;}"
				  styleName="genericBtnStyle"/>
		
		<s:TextArea id="disclaimerTxtArea"
					bottom="10" left="10" right="10" top="25"
					fontFamily="openSansSemibold"
					editable="false"
					textFlow="{TextFlowUtil.importFromXML(INFO_DISCLAIMER_XML)}" />
	</s:Group>
	
</s:Application>